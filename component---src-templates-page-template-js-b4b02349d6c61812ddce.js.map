{"version":3,"sources":["webpack:///./src/components/styles/digest.js","webpack:///./src/components/digest.js","webpack:///./src/templates/pageTemplate.js","webpack:///./src/components/styles/header.js","webpack:///./src/components/header.js","webpack:///./src/components/styles/main.js","webpack:///./src/components/main.js","webpack:///./src/components/styles/menu.js","webpack:///./src/components/menu.js","webpack:///./src/components/narrativeMenu.js","webpack:///./src/components/styles/sidebarItem.js","webpack:///./src/components/sidebarItem.js","webpack:///./src/components/styles/sidebar.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/styles/toggleButton.js","webpack:///./src/components/toggleButton.js","webpack:///./src/components/themeWrapper.js","webpack:///./src/components/styles/layout.js","webpack:///./src/components/styles/variables.js","webpack:///./src/components/styles/global.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["tableOfContents","Object","emotion_esm","name","styles","Digest","props","items","_props$themeStyle","themeStyle","style","core_browser_esm","className","dangerouslySetInnerHTML","__html","__webpack_exports__","_ref","_data$markdownRemark","data","markdownRemark","html","excerpt","_data$markdownRemark$","frontmatter","title","toc","console","log","layout","seo","description","components_digest","query","mq","facepaint","map","bp","header","width","minWidth","Header","sub","gatsby_browser_entry","to","main","Main","children","menu","components_menu","render","allMarkdownRemark","edges","node","menuTitle","slug","fields","activeClassName","key","_4229503405","NarrativeMenu","_this","_Component","call","this","toggleClass","bind","assertThisInitialized_default","state","activeIndex","index","e","setState","_this2","_this$props","chapters","_this$props$themeStyl","menuArray","replace","split","slice","item","href","onClick","Component","sidebarItem","sidebar","display","Sidebar","open","toggle","licence","components_sidebarItem","react_fontawesome_index_es","icon","size","narrativeMenu","toggleButton","top","left","padding","borderRadius","library","add","fas","ToggleButton","ThemeWrapper","baseColor","theme","react_default","a","Fragment","Layout","isOpen","toggleMenu","layoutQuery","themeWrapper","site","siteMetadata","components_sidebar","components_toggleButton","components_header","subtitle","components_main","_1389976522","SEO","author","image","lang","meta","keywords","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_5__","detailsQuery","metaDescription","metaTitle","metaAuthor","metaImage","logo","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","concat","length","join","_public_static_d_1900499496_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-templates-page-template-js-b4b02349d6c61812ddce.js","sourcesContent":["import { css } from 'emotion';\n\nconst tableOfContents = css`\n  ul {\n    margin-left: 1rem;\n  }\n  li ul {\n    margin-left: 0;\n  }\n  ul, li p {\n    margin-bottom: 0;\n  }\n`;\n\nexport default tableOfContents;\n","import React from 'react';\n\nimport style from './styles/digest'\n\nconst Digest = props => {\n  const { items, themeStyle=style } = props;\n\n  return (\n    <div className={themeStyle}>\n      <h2>Contents</h2>\n      <p dangerouslySetInnerHTML={{ __html: items}} />\n    </div>\n  );\n};\n\nexport default Digest;\n","import React from 'react'\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Digest from '../components/digest'\n\nexport default ({ data }) => {\n  const {\n    markdownRemark: {\n      html,\n      excerpt,\n      tableOfContents,\n      frontmatter: {\n        title,\n        toc,\n      },\n    },\n  } = data\n  console.log(tableOfContents)\n  return (\n    <Layout>\n      <SEO\n        title={title}\n        description={excerpt} />\n      <h2 dangerouslySetInnerHTML={{ __html: title}} />\n      { toc && <Digest items={tableOfContents} /> }\n      <p dangerouslySetInnerHTML={{ __html: html }} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PageQuery($slug: String!) {\n    markdownRemark(fields: {slug: { eq: $slug } } ) {\n      html\n      excerpt\n      tableOfContents(pathToSlugField: \"fields.slug\")\n      frontmatter {\n        title\n        type\n        toc\n      }\n    }\n  }\n`;","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [38];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst header = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\ttext-align: center;\n\tpadding-top: 1rem;\n\tpadding-bottom: 1rem;\n  border-bottom: 1px solid #eee;\n\n.masthead {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  ${mq({\n    width: ['null', '32rem', '38rem'],\n    minWidth: ['100%', '0', '0%']\n  })};\n\n  h1 {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: var(--linkColor);\n  }\n  \n  small {\n    font-family: var(--fontFamily);\n    font-size: 1rem;\n    font-weight: 300;\n    color: $text-color;\n    letter-spacing: .05rem;\n  }\n}\n\n`;\n\nexport default header;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport style from './styles/header';\n\nconst Header = props => {\n  const { title, sub, themeStyle=style } = props;\n\n  return (\n    <header className={themeStyle}>\n      \n      <div className={'masthead'}>\n        <h1>\n          <Link to={'/'}>{title}</Link>\n        </h1>\n        <small>{sub}</small>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [38, 56];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst main = css`\n  display: flex;\n  flex-direction: column;\n  flexGrow: 1;\n  padding: 0 1rem 3rem 1rem;\n  margin-left:  auto;\n  margin-right: auto;\n  h1, h2, h3, h4, h5, h6 {\n    font-family: \"PT Sans\", Helvetica, Arial, sans-serif;\n    font-weight: 100;\n  }\n  ${mq({\n    width: ['null', '36rem', '44rem'],\n  })};\n`;\n\nexport default main;\n","import React from 'react';\n\nimport style from './styles/main';\n\nconst Main = props => {\n  const { children, themeStyle=style } = props;\n\n  return (\n    <div className={themeStyle}>{children}</div>\n  );\n};\n\nexport default Main;\n","import { css } from 'emotion';\n\nconst menu = css`\n  border-bottom: 1px solid rgba(255,255,255,.1);\n  a {\n    display: block;\n    padding: .5rem 1.5rem;\n    border-top: 1px solid rgba(255,255,255,.1);\n    color: var(--backgroundColor);\n  }\n  a.active, a:active, a:hover, a:focus {\n    text-decoration: none;\n    background-color: rgba(255,255,255,.1);\n    border-color: transparent;\n  }\n  button {\n    display: block;\n    font-size: 1rem;\n    cursor: pointer;\n    width: 100%;\n    text-align: left;\n    padding: .5rem 1.5rem;\n    border: none;\n    border-top: 1px solid rgba(255,255,255,.1);\n    background-color: var(--linkColor);\n    color: var(--backgroundColor);\n  }\n  button.active, button:hover, button:focus {\n    background-color: rgba(255,255,255,.1);\n    border-color: transparent;\n  }\n  \n`;\n\nexport default menu;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { graphql, StaticQuery } from 'gatsby';\n\nimport style from './styles/menu';\n\nexport default (props) => (\n  <StaticQuery\n    query={graphql`\n      query MenuQuery {\n        allMarkdownRemark(\n          filter: { frontmatter: { type: { eq: \"page\" } } },\n          sort: {fields: [frontmatter___menuItem], order: ASC},\n        ) {\n          edges {\n            node {\n              frontmatter {\n                menuTitle\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const items = data.allMarkdownRemark.edges\n      const { themeStyle=style } = props;\n      return (\n        <nav className={themeStyle}>\n          {items.map(({node}) => {\n            const { frontmatter: { menuTitle }, fields:{ slug }, } = node;\n            \n            return (\n              <Link \n                to={slug}\n                activeClassName={'active'}\n                key={menuTitle}>\n                {menuTitle}\n              </Link>\n            )\n          })}\n        </nav>\n      );\n    }}\n  />\n)","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\n\nimport style from './styles/menu';\n\nclass NarrativeMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleClass= this.toggleClass.bind(this);\n    this.state = {\n      activeIndex: 0,\n    }\n  }\n\n  toggleClass(index, e) {\n    this.setState({ activeIndex: index });\n  }\n\n  render() {\n    const { title, chapters,\n          themeStyle=style } = this.props;\n    /* sanitize */\n    const menuArray = chapters.replace(/(<ul>|<li>|<\\/ul>|<\\/li>|<a href=\"|\\r\\n|\\n|\\r)/g, \"\").split(\"</a>\").slice(0, -1).map(item => {\n      return item.split(\"\\\">\")\n    });\n\n    return (\n      <nav className={themeStyle}>\n        <Link to={'/'}>Home</Link>\n        <a href={'#title'}>{title}</a>\n        {menuArray.map((item, index) => {\n          return (\n            <a\n              href={item[0]}\n              onClick={this.toggleClass.bind(this, index)}\n              className={this.state.activeIndex===index ? 'active' : null}\n              key={index}\n            >\n              {item[1]}\n            </a>\n          )\n        })}\n      </nav>\n    )\n  }\n}\n\nexport default NarrativeMenu      ","import { css } from 'emotion';\n\nconst sidebarItem = css`\n  padding: 1.5rem;\n  p:last-child {\n    margin-bottom: 0;\n  }\n  a {\n    font-weight: normal;\n    color: var(--backgroundColor);\n  }\n`;\n\nexport default sidebarItem;\n","import React from 'react';\n\nimport style from './styles/sidebarItem';\n\nconst sidebarItem = props => {\n  const { children, themeStyle=style } = props;\n\n  return (\n    <div className={themeStyle}>{children}</div>\n  );\n};\n\nexport default sidebarItem;\n","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [21];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst sidebar = css`\n  font-family: \"PT Sans\", Helvetica, Arial, sans-serif;\n  color: rgba(255,255,255);\n  background-color: var(--linkColor);\n  top: 0;\n  bottom:0;\n  position:fixed;\n  overflow-y:scroll;\n  overflow-x:hidden; \n  &::-webkit-scrollbar {\n    width: 2px;\n  }\n  width: 20rem;\n  margin-left: -20rem;\n  transition: var(--sidebarTransition);\n  &.open {\n    transform: var(--sidebarTransform);\n  }\n  .closeButton {\n    ${mq({ display: ['flex', 'none'] })};\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    padding: .25rem .5rem;\n    border-radius: .25rem;\n    z-index: 10;\n    border: solid 1px var(--backgroundColor);\n    cursor: pointer;\n    color: var(--backgroundColor);\n    background-color: var(--linkColor);\n    outline: 0;\n  }\n`;\n\nexport default sidebar;\n","import React from 'react'\n\nimport Menu from './menu'\nimport NarrativeMenu from './narrativeMenu'\nimport SidebarItem from './sidebarItem'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { cx } from 'emotion'\nimport style from './styles/sidebar';\n\nconst Sidebar = props => {\n  const { open, toggle, sidebar, title, chapters, themeStyle=style } = props;\n  const { description, licence } = sidebar;\n\n  return (\n    <div className={cx(themeStyle, [open ? 'open' : 'close'])}>\n      <SidebarItem>\n        <button\n          className={cx('closeButton', [open ? 'selected' : ''])}\n          onClick={toggle}\n        >\n          <FontAwesomeIcon icon={['fas', 'times']} size={'lg'} />\n        </button>\n        {description}\n      </SidebarItem>\n      \n        { chapters \n          ? <NarrativeMenu \n              title={title}\n              chapters={chapters}\n            /> \n          : <Menu /> }\n      <SidebarItem>{licence}</SidebarItem>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [38];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst toggleButton = css`\n  position: fixed;\n  z-index: 10;\n  ${mq({\n    top: ['1rem', '2rem'],\n    left: ['1rem', '2rem'],\n    padding: ['.25rem .5rem', '.5rem 1rem'],\n    borderRadius: ['.25rem', '.5rem']\n  })};\n  border: solid 1px var(--textColor);\n  cursor: pointer;\n  color: var(--textColor);\n  background-color: var(--backgroundColor);\n  outline: 0;\n  transition: var(--sidebarTransition);\n  &.selected {\n    color: var(--backgroundColor);\n    background-color: var(--textColor); \n    transform: var(--sidebarTransform);\n  }\n`;\n\nexport default toggleButton;\n","import React from 'react';\nimport { cx } from 'emotion'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nimport style from './styles/toggleButton';\n\nlibrary.add(fas)\n\nconst ToggleButton = props => {\n  const { open, toggle, themeStyle=style  } = props;\n\n  return (\n    <button\n      className={cx(themeStyle, [open ? 'selected' : ''])}\n      onClick={toggle}\n    >\n      <FontAwesomeIcon icon={['fas', 'bars']} size={'lg'} />\n    </button>\n  );\n};\n\nexport default ToggleButton;\n","import React from 'react';\nimport { injectGlobal } from 'emotion';\n\nconst ThemeWrapper = props => {\n  const { children, theme } = props;\n\n  let baseColor\n  switch(theme) {\n    case \"blue\":\n      baseColor = `#6a9fb5`\n      break;\n    case \"brown\":\n      baseColor = `#8f5536`\n      break;\n    case \"cyan\":\n      baseColor = `#75b5aa`\n      break;\n    case \"green\":\n      baseColor = `#90a959`\n      break;\n    case \"magenta\":\n      baseColor = `#aa759f`\n      break;\n    case \"orange\":\n      baseColor = `#d28445`\n      break\n    case \"red\":\n      baseColor = `#841212`\n      break;\n    default:\n      baseColor = `#841212`\n  }\n\n  injectGlobal`\n    :root {\n      --linkColor: ${baseColor}\n    }\n  `;\n\n  return (\n    <>\n      {children}\n    </>\n  );\n};\n\nexport default ThemeWrapper;\n","import { css } from 'emotion';\n\nconst layout = css`\n  display: flex;\n  flex-direction: row;\n  .invisible-scrollbar::-webkit-scrollbar {\n    display: none;\n  }\n  .wrap {\n    position: absolute;\n    width: 100%;\n    transition: var(--sidebarTransition);\n  }\n  .open {\n    transform: var(--sidebarTransform);\n  }\n`;\n\nexport default layout;\n","import { injectGlobal } from 'emotion';\n\nconst variables = injectGlobal`\n  :root {\n    --textColor: #454545;\n    --textHeadingColor: #404040;\n\n    --linkColor: #841212;\n\n    --fontFamily: serif;\n    --fontFamilyHeader: serif;\n    --fontFamilyPara: sans-serif;\n\n    --fontSize: 16px;\n\n    --backgroundColor: #fff;\n\n    --sidebarTransition: transform ease-in-out .5s;\n    --sidebarTransform: translateX(20rem);\n\n    --scrollBarThumb: #eaeaea;\n    --scrollBarTrack: #f9f9f9;\n    --scrollBarWidth: 2px;\n  }\n`;\n\nexport default variables;\n","import { injectGlobal } from 'emotion';\n\nconst global = injectGlobal`\n\n  /* Ed: the minimal edition theme. */\n  /* Based on the Ed theme by @elotroalex and brill friends (https://github.com/minicomp/ed) */\n  /* To apply a different color scheme to the whole scroll down to the themes section for instructions */\n\n\n  /* General -- css foundation */\n\n  * {\n    box-sizing: border-box;\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n  }\n  \n  html {\n    font-family: var(--fontFamily);\n    font-size: var(--fontSize);\n    line-height: 1.5;\n  }\n  \n  body {\n    color: var(--textColor);\n    background-color: var(--backgroundColor);\n  }\n\n\n  /* headings */\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: var(--fontFamilyHeader);\n    margin: 1rem 0 .5rem 0;\n    font-weight: 300;\n    color: var(--textHeadingColor);\n    letter-spacing: -.025rem;\n    line-height: 1;\n    text-rendering: optimizeLegibility;\n  }\n  \n  h1 {\n    font-size: 2.5rem;\n  }\n  \n  h2 {\n    font-size: 2rem;\n  }\n  \n  h3, h4 {\n    font-size: 1.5rem;\n  }\n\n  h5, h6 {\n    font-size: 1rem;\n  }\n  \n\n  /* Body text */\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n\n  /* Links */\n\n  a, .text-title a {\n    color: var(--linkColor);\n    text-decoration: none;\n  }\n\n  /* :focus is linked to :hover for basic accessibility */\n  a:hover,\n  a:focus {\n    text-decoration: underline;\n  }\n   \n  /* Lists */\n  \n  ul {\n    list-style: circle;\n  }\n  \n  ul, ol {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    padding-left: 1rem;\n    li p, li ul {\n      margin-bottom: 0rem;\n    }\n  }\n  \n\n  /* Footnotes */\n\n  .footnotes {\n    [id*=\"fn-\"] {\n      p {\n        margin-bottom: 0rem;\n        display: inline;\n      }\n    }\n    hr {\n      display: none;\n    }\n  }\n  \n  /* Horizontal ruler */\n  \n  hr {\n    margin-top: 3rem;\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid #eee;\n    border-bottom: 1px solid var(--backgroundColor);\n  }\n\n  /* Prism highlighting */\n\n  /* Code blocks */\n  pre[class*=\"language-\"] {\n    margin: .5em .5rem;\n    font-size: .85rem;\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*=\"language-\"] {\n    padding: .1em .5em;\n    font-size: .85rem;\n  }\n  \n`;\n\nexport default global;","import React, { Component } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { cx } from 'emotion'\n\nimport Header from './header'\nimport Main from './main'\nimport Sidebar from './sidebar'\nimport ToggleButton from './toggleButton';\nimport ThemeWrapper from './themeWrapper';\n\n\nimport './styles/variables';\nimport './styles/global';\nimport style from './styles/layout';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  \n  toggleMenu() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    const { children, themeStyle=style, \n            title, chapters } = this.props;\n\n    return (\n      <StaticQuery\n        query={layoutQuery}\n        render={data => (\n          <ThemeWrapper\n            theme={data.site.siteMetadata.theme}>\n            <div className={themeStyle}>\n              <Sidebar\n                open={this.state.isOpen}\n                toggle={() => this.toggleMenu()}\n                sidebar={data.site.siteMetadata.sidebar}\n                title={title}\n                chapters={chapters}\n              />\n              <ToggleButton\n                open={this.state.isOpen}\n                toggle={() => this.toggleMenu()} />\n              <div className={cx('wrap', [this.state.isOpen ? 'open' : 'close'])}>\n                <Header\n                  title={data.site.siteMetadata.title}\n                  sub={data.site.siteMetadata.subtitle}\n                />\n                <Main>\n                  {children}\n                </Main>\n              </div>\n            </div>\n          </ThemeWrapper>\n        )}\n      />\n    )\n  }  \n}\n\nexport default Layout;\n\nconst layoutQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        theme\n        sidebar {\n          ...SidebarInfo\n        }\n      }\n    }\n  }\n  \n  fragment SidebarInfo on SiteSiteMetadataSidebar {\n    description\n    licence\n  }\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({  title, author, description, image,\n                lang, meta, keywords }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description \n          ? description \n          : data.site.siteMetadata.description\n        const metaTitle = title\n          ? title\n          : data.site.siteMetadata.title\n        const metaAuthor = author\n          ? author\n          : data.site.siteMetadata.author\n        const metaImage = image\n          ? image\n          : data.site.siteMetadata.logo\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: metaTitle,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:image`,\n                content: metaImage,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: metaAuthor,\n              },\n              {\n                name: `twitter:title`,\n                content: metaTitle,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        logo\n      }\n    }\n  }\n\n`\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/styles/header.js","webpack:///./src/components/header.js","webpack:///./src/components/styles/main.js","webpack:///./src/components/main.js","webpack:///./src/components/styles/menu.js","webpack:///./src/components/menu.js","webpack:///./src/components/narrativeMenu.js","webpack:///./src/components/styles/sidebarItem.js","webpack:///./src/components/sidebarItem.js","webpack:///./src/components/styles/sidebar.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/styles/toggleButton.js","webpack:///./src/components/toggleButton.js","webpack:///./src/components/themeWrapper.js","webpack:///./src/components/styles/layout.js","webpack:///./src/components/styles/variables.js","webpack:///./src/components/styles/global.js","webpack:///./src/components/layout.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","mq","facepaint","map","bp","header","emotion_esm","width","minWidth","Header","props","title","sub","_props$themeStyle","themeStyle","style","core_browser_esm","className","gatsby_browser_entry","to","main","Main","children","menu","name","styles","components_menu","query","render","data","items","allMarkdownRemark","edges","_ref","node","menuTitle","frontmatter","slug","fields","activeClassName","key","_4229503405","NarrativeMenu","_this","_Component","call","this","toggleClass","bind","assertThisInitialized_default","state","activeIndex","index","e","setState","_this2","_this$props","chapters","_this$props$themeStyl","menuArray","replace","split","slice","item","href","onClick","Component","sidebarItem","sidebar","display","Sidebar","open","toggle","description","licence","components_sidebarItem","react_fontawesome_index_es","icon","size","narrativeMenu","toggleButton","top","left","padding","borderRadius","library","add","fas","ToggleButton","ThemeWrapper","baseColor","theme","react_default","a","Fragment","layout","Layout","isOpen","toggleMenu","layoutQuery","themeWrapper","site","siteMetadata","components_sidebar","components_toggleButton","components_header","subtitle","components_main","_1389976522"],"mappings":"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","file":"component---src-pages-404-js-2e6bf70bdd85e7d3837d.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn't exist...</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [38];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst header = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\ttext-align: center;\n\tpadding-top: 1rem;\n\tpadding-bottom: 1rem;\n  border-bottom: 1px solid #eee;\n\n.masthead {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  ${mq({\n    width: ['null', '32rem', '38rem'],\n    minWidth: ['100%', '0', '0%']\n  })};\n\n  h1 {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: var(--linkColor);\n  }\n  \n  small {\n    font-family: var(--fontFamily);\n    font-size: 1rem;\n    font-weight: 300;\n    color: $text-color;\n    letter-spacing: .05rem;\n  }\n}\n\n`;\n\nexport default header;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport style from './styles/header';\n\nconst Header = props => {\n  const { title, sub, themeStyle=style } = props;\n\n  return (\n    <header className={themeStyle}>\n      \n      <div className={'masthead'}>\n        <h1>\n          <Link to={'/'}>{title}</Link>\n        </h1>\n        <small>{sub}</small>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [38, 56];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst main = css`\n  display: flex;\n  flex-direction: column;\n  flexGrow: 1;\n  padding: 0 1rem 3rem 1rem;\n  margin-left:  auto;\n  margin-right: auto;\n  h1, h2, h3, h4, h5, h6 {\n    font-family: \"PT Sans\", Helvetica, Arial, sans-serif;\n    font-weight: 100;\n  }\n  ${mq({\n    width: ['null', '36rem', '44rem'],\n  })};\n`;\n\nexport default main;\n","import React from 'react';\n\nimport style from './styles/main';\n\nconst Main = props => {\n  const { children, themeStyle=style } = props;\n\n  return (\n    <div className={themeStyle}>{children}</div>\n  );\n};\n\nexport default Main;\n","import { css } from 'emotion';\n\nconst menu = css`\n  border-bottom: 1px solid rgba(255,255,255,.1);\n  a {\n    display: block;\n    padding: .5rem 1.5rem;\n    border-top: 1px solid rgba(255,255,255,.1);\n    color: var(--backgroundColor);\n  }\n  a.active, a:active, a:hover, a:focus {\n    text-decoration: none;\n    background-color: rgba(255,255,255,.1);\n    border-color: transparent;\n  }\n  button {\n    display: block;\n    font-size: 1rem;\n    cursor: pointer;\n    width: 100%;\n    text-align: left;\n    padding: .5rem 1.5rem;\n    border: none;\n    border-top: 1px solid rgba(255,255,255,.1);\n    background-color: var(--linkColor);\n    color: var(--backgroundColor);\n  }\n  button.active, button:hover, button:focus {\n    background-color: rgba(255,255,255,.1);\n    border-color: transparent;\n  }\n  \n`;\n\nexport default menu;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { graphql, StaticQuery } from 'gatsby';\n\nimport style from './styles/menu';\n\nexport default (props) => (\n  <StaticQuery\n    query={graphql`\n      query MenuQuery {\n        allMarkdownRemark(\n          filter: { frontmatter: { type: { eq: \"page\" } } },\n          sort: {fields: [frontmatter___menuItem], order: ASC},\n        ) {\n          edges {\n            node {\n              frontmatter {\n                menuTitle\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const items = data.allMarkdownRemark.edges\n      const { themeStyle=style } = props;\n      return (\n        <nav className={themeStyle}>\n          {items.map(({node}) => {\n            const { frontmatter: { menuTitle }, fields:{ slug }, } = node;\n            \n            return (\n              <Link \n                to={slug}\n                activeClassName={'active'}\n                key={menuTitle}>\n                {menuTitle}\n              </Link>\n            )\n          })}\n        </nav>\n      );\n    }}\n  />\n)","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\n\nimport style from './styles/menu';\n\nclass NarrativeMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleClass= this.toggleClass.bind(this);\n    this.state = {\n      activeIndex: 0,\n    }\n  }\n\n  toggleClass(index, e) {\n    this.setState({ activeIndex: index });\n  }\n\n  render() {\n    const { title, chapters,\n          themeStyle=style } = this.props;\n    /* sanitize */\n    const menuArray = chapters.replace(/(<ul>|<li>|<\\/ul>|<\\/li>|<a href=\"|\\r\\n|\\n|\\r)/g, \"\").split(\"</a>\").slice(0, -1).map(item => {\n      return item.split(\"\\\">\")\n    });\n\n    return (\n      <nav className={themeStyle}>\n        <Link to={'/'}>Home</Link>\n        <a href={'#title'}>{title}</a>\n        {menuArray.map((item, index) => {\n          return (\n            <a\n              href={item[0]}\n              onClick={this.toggleClass.bind(this, index)}\n              className={this.state.activeIndex===index ? 'active' : null}\n              key={index}\n            >\n              {item[1]}\n            </a>\n          )\n        })}\n      </nav>\n    )\n  }\n}\n\nexport default NarrativeMenu      ","import { css } from 'emotion';\n\nconst sidebarItem = css`\n  padding: 1.5rem;\n  p:last-child {\n    margin-bottom: 0;\n  }\n  a {\n    font-weight: normal;\n    color: var(--backgroundColor);\n  }\n`;\n\nexport default sidebarItem;\n","import React from 'react';\n\nimport style from './styles/sidebarItem';\n\nconst sidebarItem = props => {\n  const { children, themeStyle=style } = props;\n\n  return (\n    <div className={themeStyle}>{children}</div>\n  );\n};\n\nexport default sidebarItem;\n","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [21];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst sidebar = css`\n  font-family: \"PT Sans\", Helvetica, Arial, sans-serif;\n  color: rgba(255,255,255);\n  background-color: var(--linkColor);\n  top: 0;\n  bottom:0;\n  position:fixed;\n  overflow-y:scroll;\n  overflow-x:hidden; \n  &::-webkit-scrollbar {\n    width: 2px;\n  }\n  width: 20rem;\n  margin-left: -20rem;\n  transition: var(--sidebarTransition);\n  &.open {\n    transform: var(--sidebarTransform);\n  }\n  .closeButton {\n    ${mq({ display: ['flex', 'none'] })};\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    padding: .25rem .5rem;\n    border-radius: .25rem;\n    z-index: 10;\n    border: solid 1px var(--backgroundColor);\n    cursor: pointer;\n    color: var(--backgroundColor);\n    background-color: var(--linkColor);\n    outline: 0;\n  }\n`;\n\nexport default sidebar;\n","import React from 'react'\n\nimport Menu from './menu'\nimport NarrativeMenu from './narrativeMenu'\nimport SidebarItem from './sidebarItem'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { cx } from 'emotion'\nimport style from './styles/sidebar';\n\nconst Sidebar = props => {\n  const { open, toggle, sidebar, title, chapters, themeStyle=style } = props;\n  const { description, licence } = sidebar;\n\n  return (\n    <div className={cx(themeStyle, [open ? 'open' : 'close'])}>\n      <SidebarItem>\n        <button\n          className={cx('closeButton', [open ? 'selected' : ''])}\n          onClick={toggle}\n        >\n          <FontAwesomeIcon icon={['fas', 'times']} size={'lg'} />\n        </button>\n        {description}\n      </SidebarItem>\n      \n        { chapters \n          ? <NarrativeMenu \n              title={title}\n              chapters={chapters}\n            /> \n          : <Menu /> }\n      <SidebarItem>{licence}</SidebarItem>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { css } from 'emotion';\nimport facepaint from 'facepaint';\n\nconst breakpoints = [38];\nconst mq = facepaint(breakpoints.map(bp => `@media (min-width: ${bp}rem)`));\n\nconst toggleButton = css`\n  position: fixed;\n  z-index: 10;\n  ${mq({\n    top: ['1rem', '2rem'],\n    left: ['1rem', '2rem'],\n    padding: ['.25rem .5rem', '.5rem 1rem'],\n    borderRadius: ['.25rem', '.5rem']\n  })};\n  border: solid 1px var(--textColor);\n  cursor: pointer;\n  color: var(--textColor);\n  background-color: var(--backgroundColor);\n  outline: 0;\n  transition: var(--sidebarTransition);\n  &.selected {\n    color: var(--backgroundColor);\n    background-color: var(--textColor); \n    transform: var(--sidebarTransform);\n  }\n`;\n\nexport default toggleButton;\n","import React from 'react';\nimport { cx } from 'emotion'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nimport style from './styles/toggleButton';\n\nlibrary.add(fas)\n\nconst ToggleButton = props => {\n  const { open, toggle, themeStyle=style  } = props;\n\n  return (\n    <button\n      className={cx(themeStyle, [open ? 'selected' : ''])}\n      onClick={toggle}\n    >\n      <FontAwesomeIcon icon={['fas', 'bars']} size={'lg'} />\n    </button>\n  );\n};\n\nexport default ToggleButton;\n","import React from 'react';\nimport { injectGlobal } from 'emotion';\n\nconst ThemeWrapper = props => {\n  const { children, theme } = props;\n\n  let baseColor\n  switch(theme) {\n    case \"blue\":\n      baseColor = `#6a9fb5`\n      break;\n    case \"brown\":\n      baseColor = `#8f5536`\n      break;\n    case \"cyan\":\n      baseColor = `#75b5aa`\n      break;\n    case \"green\":\n      baseColor = `#90a959`\n      break;\n    case \"magenta\":\n      baseColor = `#aa759f`\n      break;\n    case \"orange\":\n      baseColor = `#d28445`\n      break\n    case \"red\":\n      baseColor = `#841212`\n      break;\n    default:\n      baseColor = `#841212`\n  }\n\n  injectGlobal`\n    :root {\n      --linkColor: ${baseColor}\n    }\n  `;\n\n  return (\n    <>\n      {children}\n    </>\n  );\n};\n\nexport default ThemeWrapper;\n","import { css } from 'emotion';\n\nconst layout = css`\n  display: flex;\n  flex-direction: row;\n  .invisible-scrollbar::-webkit-scrollbar {\n    display: none;\n  }\n  .wrap {\n    position: absolute;\n    width: 100%;\n    transition: var(--sidebarTransition);\n  }\n  .open {\n    transform: var(--sidebarTransform);\n  }\n`;\n\nexport default layout;\n","import { injectGlobal } from 'emotion';\n\nconst variables = injectGlobal`\n  :root {\n    --textColor: #454545;\n    --textHeadingColor: #404040;\n\n    --linkColor: #841212;\n\n    --fontFamily: serif;\n    --fontFamilyHeader: serif;\n    --fontFamilyPara: sans-serif;\n\n    --fontSize: 16px;\n\n    --backgroundColor: #fff;\n\n    --sidebarTransition: transform ease-in-out .5s;\n    --sidebarTransform: translateX(20rem);\n\n    --scrollBarThumb: #eaeaea;\n    --scrollBarTrack: #f9f9f9;\n    --scrollBarWidth: 2px;\n  }\n`;\n\nexport default variables;\n","import { injectGlobal } from 'emotion';\n\nconst global = injectGlobal`\n\n  /* Ed: the minimal edition theme. */\n  /* Based on the Ed theme by @elotroalex and brill friends (https://github.com/minicomp/ed) */\n  /* To apply a different color scheme to the whole scroll down to the themes section for instructions */\n\n\n  /* General -- css foundation */\n\n  * {\n    box-sizing: border-box;\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n  }\n  \n  html {\n    font-family: var(--fontFamily);\n    font-size: var(--fontSize);\n    line-height: 1.5;\n  }\n  \n  body {\n    color: var(--textColor);\n    background-color: var(--backgroundColor);\n  }\n\n\n  /* headings */\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: var(--fontFamilyHeader);\n    margin: 1rem 0 .5rem 0;\n    font-weight: 300;\n    color: var(--textHeadingColor);\n    letter-spacing: -.025rem;\n    line-height: 1;\n    text-rendering: optimizeLegibility;\n  }\n  \n  h1 {\n    font-size: 2.5rem;\n  }\n  \n  h2 {\n    font-size: 2rem;\n  }\n  \n  h3, h4 {\n    font-size: 1.5rem;\n  }\n\n  h5, h6 {\n    font-size: 1rem;\n  }\n  \n\n  /* Body text */\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n\n  /* Links */\n\n  a, .text-title a {\n    color: var(--linkColor);\n    text-decoration: none;\n  }\n\n  /* :focus is linked to :hover for basic accessibility */\n  a:hover,\n  a:focus {\n    text-decoration: underline;\n  }\n   \n  /* Lists */\n  \n  ul {\n    list-style: circle;\n  }\n  \n  ul, ol {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    padding-left: 1rem;\n    li p, li ul {\n      margin-bottom: 0rem;\n    }\n  }\n  \n\n  /* Footnotes */\n\n  .footnotes {\n    [id*=\"fn-\"] {\n      p {\n        margin-bottom: 0rem;\n        display: inline;\n      }\n    }\n    hr {\n      display: none;\n    }\n  }\n  \n  /* Horizontal ruler */\n  \n  hr {\n    margin-top: 3rem;\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid #eee;\n    border-bottom: 1px solid var(--backgroundColor);\n  }\n\n  /* Prism highlighting */\n\n  /* Code blocks */\n  pre[class*=\"language-\"] {\n    margin: .5em .5rem;\n    font-size: .85rem;\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*=\"language-\"] {\n    padding: .1em .5em;\n    font-size: .85rem;\n  }\n  \n`;\n\nexport default global;","import React, { Component } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { cx } from 'emotion'\n\nimport Header from './header'\nimport Main from './main'\nimport Sidebar from './sidebar'\nimport ToggleButton from './toggleButton';\nimport ThemeWrapper from './themeWrapper';\n\n\nimport './styles/variables';\nimport './styles/global';\nimport style from './styles/layout';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  \n  toggleMenu() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    const { children, themeStyle=style, \n            title, chapters } = this.props;\n\n    return (\n      <StaticQuery\n        query={layoutQuery}\n        render={data => (\n          <ThemeWrapper\n            theme={data.site.siteMetadata.theme}>\n            <div className={themeStyle}>\n              <Sidebar\n                open={this.state.isOpen}\n                toggle={() => this.toggleMenu()}\n                sidebar={data.site.siteMetadata.sidebar}\n                title={title}\n                chapters={chapters}\n              />\n              <ToggleButton\n                open={this.state.isOpen}\n                toggle={() => this.toggleMenu()} />\n              <div className={cx('wrap', [this.state.isOpen ? 'open' : 'close'])}>\n                <Header\n                  title={data.site.siteMetadata.title}\n                  sub={data.site.siteMetadata.subtitle}\n                />\n                <Main>\n                  {children}\n                </Main>\n              </div>\n            </div>\n          </ThemeWrapper>\n        )}\n      />\n    )\n  }  \n}\n\nexport default Layout;\n\nconst layoutQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        theme\n        sidebar {\n          ...SidebarInfo\n        }\n      }\n    }\n  }\n  \n  fragment SidebarInfo on SiteSiteMetadataSidebar {\n    description\n    licence\n  }\n`"],"sourceRoot":""}